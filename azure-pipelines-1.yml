# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
schedules:
- cron: '*/10 14-21 * * 1-5'
  displayName: Daily run
  branches:
    include:
    - master
  always: True

# trigger: none

stages:
- stage: RUN
  displayName: Run image
  jobs:  
  - job: Run
    displayName: Run
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'specific'
        project: '52448eba-e4d0-40b7-949c-c0e84daf42d4'
        pipeline: '2'
        buildVersionToDownload: 'latest'
        downloadType: 'specific'
        itemPattern: '*_model*'
        downloadPath: '$(system.defaultworkingdirectory)'
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerHub'
        command: 'login'
        addPipelineData: false
    - task: Docker@2
      inputs:
        containerRegistry: 'dockerHub'
        repository: 'nemaher/stocks'
        command: 'run'
        arguments: '-e key_id=$(alpaca_key_id) -e secret_key=$(alpaca_secret_key) -v $(system.defaultworkingdirectory)/config:/config -v $(system.defaultworkingdirectory)/output:/output nemaher/stocks trade-stocks --symbol $(symbol) --save-path /output'
        addPipelineData: false
#    - script: |
#        docker login --username nemaher --password $(pwd)
#        docker pull docker.io/
#        mkdir $(system.defaultworkingdirectory)/config
#        mkdir $(system.defaultworkingdirectory)/output
#        touch $(system.defaultworkingdirectory)/config/config.yml
#        echo key_id: $(alpaca_key_id) >> $(system.defaultworkingdirectory)/config/config.yml
#        echo secret_key: $(alpaca_secret_key) >> $(system.defaultworkingdirectory)/config/config.yml
#        docker run
#        ls $(system.defaultworkingdirectory)
#        ls $(system.defaultworkingdirectory)/config
#        ls $(system.defaultworkingdirectory)/output
#        ls $(system.defaultworkingdirectory)/stocks
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)/output'
        Contents: '**'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(symbol)'
        publishLocation: 'Container'

